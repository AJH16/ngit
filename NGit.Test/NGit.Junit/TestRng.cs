using Sharpen;

namespace NGit.Junit
{
	/// <summary>Toy RNG to ensure we get predictable numbers during unit tests.</summary>
	/// <remarks>Toy RNG to ensure we get predictable numbers during unit tests.</remarks>
	public class TestRng
	{
		private int next;

		/// <summary>Create a new random number generator, seeded by a string.</summary>
		/// <remarks>Create a new random number generator, seeded by a string.</remarks>
		/// <param name="seed">seed to bootstrap, usually this is the test method name.</param>
		public TestRng(string seed)
		{
			next = 0;
			for (int i = 0; i < seed.Length; i++)
			{
				next = next * 11 + seed[i];
			}
		}

		/// <summary>
		/// Get the next
		/// <code>cnt</code>
		/// bytes of random data.
		/// </summary>
		/// <param name="cnt">number of random bytes to produce.</param>
		/// <returns>
		/// array of
		/// <code>cnt</code>
		/// randomly generated bytes.
		/// </returns>
		public virtual byte[] NextBytes(int cnt)
		{
			byte[] r = new byte[cnt];
			for (int i = 0; i < cnt; i++)
			{
				r[i] = unchecked((byte)NextInt());
			}
			return r;
		}

		/// <returns>the next random integer.</returns>
		public virtual int NextInt()
		{
			next = next * 1103515245 + 12345;
			return next;
		}
	}
}
